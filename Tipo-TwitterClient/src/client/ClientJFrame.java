package client;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
* CLASSE - ClentJFrame:
*   Cuida tanto da exibição da Interface Gráfica para o Cliente
*   que estará utilizando o serviço quanto do estabelecimento da
*   conexão com o Servidor
* 
*   @author  Karoline Neves Bernardo
*   @since   30-04-2019 
*/
public class ClientJFrame extends javax.swing.JFrame {
    private static Socket cliente;
    private static DataInputStream entrada;
    private static DataOutputStream saida;

    /**
    * Construtor:
    *   Inicializa os componentes da Interface Gráfica,
    *   estabelece a conexão e prepara o botão de enviar
    */
    public ClientJFrame() {
        //Inicio os componentes graficos
        initComponents();
        //Conecta o cliente ao servidor
        initClient();

        //Adiciona um KeyListener para o botão de enviar
        enviarMenssagem.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    enviarMenssagem.doClick();
                    System.out.println("click");
                }
            }
        });       
    }


    /**
    * Método - initClient:
    *   Estabelece a conexão do Cliente com o Servidor, definindo seu nickname
    *   caso ele ainda não siga o servidor ou resgatando-o caso ele já siga
    */
    public static void initClient() {
        try {
            //Cria um cliente para se conctar no IP e porta do servidor
            cliente = new Socket("127.0.0.1", 3322);
            //Cria o SEND e o RECEIVE do cliente 
            entrada = new DataInputStream(cliente.getInputStream());
            saida = new DataOutputStream(cliente.getOutputStream());
            //Recebe o meu nick caso eu ja siga o servidor, ou 0 casa eu ainda não siga
            String nickCheck = entrada.readUTF();

            if (nickCheck.equals("0")) {
                //Caso seja 0 eu preço pra ele da seu nick para salvar no servidor
                String nick = JOptionPane.showInputDialog("Qual seu UserName");
                saida.writeUTF(nick);
            } else {
                //Caso ja tenha nick ele me mostra ele
                JOptionPane.showMessageDialog(null, "Seu UserName é: " + nickCheck);
            }

            jTextPane2.setText(entrada.readUTF());

        } catch (IOException ex) {
            Logger.getLogger(ClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * Método - initComponents:
     *   É chamado no construtor para inicializar o Form que exibe a Interface Gráfica.
     *   
     *   WARNING: Do NOT modify this code. The content of this method is always
     *   regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        deixarDeSeguir = new javax.swing.JButton();
        enviarMenssagem = new javax.swing.JButton();
        AttButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        deixarDeSeguir.setText("Deixar de Seguir");
        deixarDeSeguir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deixarDeSeguirMouseClicked(evt);
            }
        });

        enviarMenssagem.setText("Enviar Menssagem");
        enviarMenssagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enviarMenssagemMouseClicked(evt);
            }
        });

        AttButton.setText("Atualizar");
        AttButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AttButtonMouseClicked(evt);
            }
        });

        jTextPane2.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(jTextPane2);

        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(deixarDeSeguir, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 273, Short.MAX_VALUE)
                .addComponent(enviarMenssagem, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AttButton)
                .addGap(305, 305, 305))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AttButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deixarDeSeguir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(enviarMenssagem, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    /**
    * Método - AttButtonMouseClicked:
    *   É uma função relativa ao botão de atualizar o painel de texto fazendo-o
    *   receber o conjunto novo de mensagens
    *
    *   @param evt Evento do click no Botão
    */
    private void AttButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AttButtonMouseClicked
        try {
            //Envia uma menssagem com um comando determinado por nós para o servidor manda as novas menssagens
            saida.writeUTF("Console:ATTALLMENSSAGE:1B71");
            //Depois recebe essas menssagens e atualiza o painel de texto
            jTextPane2.setText(entrada.readUTF());
        } catch (IOException ex) {
            Logger.getLogger(ClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AttButtonMouseClicked


    /**
    * Método - enviarMenssagemMouseClicked:
    *   É uma função relativa ao botão de enviar uma mensagem para o servidor
    *
    *   @param evt Evento do click no Botão
    */
    private void enviarMenssagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviarMenssagemMouseClicked
        try {
            //Envia a menssagem digitada e depois limpa o painel de envio
            saida.writeUTF(jTextPane1.getText());
            jTextPane1.setText("");
            //Depois o servidor manda a menssagem de volta junto com outras que vc ainda não tiver recebido
            jTextPane2.setText(entrada.readUTF());
        } catch (IOException ex) {
            Logger.getLogger(ClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enviarMenssagemMouseClicked


    /**
    * Método - enviarMenssagemMouseClicked:
    *   É uma função relativa ao botão de parar seguir o Servidor
    *
    *   @param evt Evento do click no Botão
    */
    private void deixarDeSeguirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deixarDeSeguirMouseClicked
         try {
            //Envia uma menssagem com um comando determinado por nós para o servidor para tirar ele da lista de seguidores
            saida.writeUTF("Console:UNFOLLOW:1B71"); 
            //Recebe a comfirmação
            jTextPane2.setText(entrada.readUTF());
        } catch (IOException ex) {
            Logger.getLogger(ClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deixarDeSeguirMouseClicked

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ClientJFrame().setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttButton;
    private javax.swing.JButton deixarDeSeguir;
    private javax.swing.JButton enviarMenssagem;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private static javax.swing.JTextPane jTextPane2;
    // End of variables declaration//GEN-END:variables
}
